import matplotlib.pyplot as plt 
import numpy as np


# Want to choose startpoints and endpoints, and perhaps midpoints to interpolate between 
# which will feed into phase control algo as successive focus points to simulate for and store in a csv

density = 2

# Might be multiplied by d in interference code
focusPoints = ([-4, -4, 3], [-4, -2, 4], [-2, 2, 5],[-1, 3, 4], [2, 4, 8], [2, -2, 7], [-4, -4, 5])


#Linear interpolation
# Interpolate to next point, append.
def interpolatePoints(focusPoints, N):
    interpolated_points = []
    for start, end in zip(focusPoints[:-1], focusPoints[1:]): # pairwise points
        magnitudes = np.sqrt((end[0] - start[0])**2 + (end[1] - start[1])**2 + (end[2] - start[2])**2)
        N = int(magnitudes * density)
        
        for i in range(N):
            t = i / (N)
            x = (1 - t) * start[0] + t * end[0]
            y = (1 - t) * start[1] + t * end[1]
            z = (1 - t) * start[2] + t * end[2]
            interpolated_points.append((x, y, z))
    return interpolated_points


interpolated_points = interpolatePoints(focusPoints, 10)
interpolated_points = np.array(interpolated_points)


x = interpolated_points[:, 0]
y = interpolated_points[:, 1]
z= interpolated_points[:, 2]

ax = plt.figure().add_subplot(projection="3d")

ax.plot(x, y, z, label="lol", marker="o")

plt.grid(True)
plt.show()
